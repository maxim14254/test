//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveData", ReplyAction="http://tempuri.org/IService1/SaveDataResponse")]
        void SaveData(float Price, System.DateTime Date, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveData", ReplyAction="http://tempuri.org/IService1/SaveDataResponse")]
        System.Threading.Tasks.Task SaveDataAsync(float Price, System.DateTime Date, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectPrice", ReplyAction="http://tempuri.org/IService1/SelectPriceResponse")]
        string SelectPrice(System.DateTime Date, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectPrice", ReplyAction="http://tempuri.org/IService1/SelectPriceResponse")]
        System.Threading.Tasks.Task<string> SelectPriceAsync(System.DateTime Date, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AveragePrice", ReplyAction="http://tempuri.org/IService1/AveragePriceResponse")]
        string AveragePrice(System.DateTime DateStart, System.DateTime DateFinish, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AveragePrice", ReplyAction="http://tempuri.org/IService1/AveragePriceResponse")]
        System.Threading.Tasks.Task<string> AveragePriceAsync(System.DateTime DateStart, System.DateTime DateFinish, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllPriceAndDates", ReplyAction="http://tempuri.org/IService1/AllPriceAndDatesResponse")]
        string[][] AllPriceAndDates(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllPriceAndDates", ReplyAction="http://tempuri.org/IService1/AllPriceAndDatesResponse")]
        System.Threading.Tasks.Task<string[][]> AllPriceAndDatesAsync(string Name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WindowsFormsApp1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WindowsFormsApp1.ServiceReference1.IService1>, WindowsFormsApp1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SaveData(float Price, System.DateTime Date, string Name) {
            base.Channel.SaveData(Price, Date, Name);
        }
        
        public System.Threading.Tasks.Task SaveDataAsync(float Price, System.DateTime Date, string Name) {
            return base.Channel.SaveDataAsync(Price, Date, Name);
        }
        
        public string SelectPrice(System.DateTime Date, string Name) {
            return base.Channel.SelectPrice(Date, Name);
        }
        
        public System.Threading.Tasks.Task<string> SelectPriceAsync(System.DateTime Date, string Name) {
            return base.Channel.SelectPriceAsync(Date, Name);
        }
        
        public string AveragePrice(System.DateTime DateStart, System.DateTime DateFinish, string Name) {
            return base.Channel.AveragePrice(DateStart, DateFinish, Name);
        }
        
        public System.Threading.Tasks.Task<string> AveragePriceAsync(System.DateTime DateStart, System.DateTime DateFinish, string Name) {
            return base.Channel.AveragePriceAsync(DateStart, DateFinish, Name);
        }
        
        public string[][] AllPriceAndDates(string Name) {
            return base.Channel.AllPriceAndDates(Name);
        }
        
        public System.Threading.Tasks.Task<string[][]> AllPriceAndDatesAsync(string Name) {
            return base.Channel.AllPriceAndDatesAsync(Name);
        }
    }
}
